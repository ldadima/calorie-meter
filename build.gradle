buildscript {
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8"
//        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.5.RELEASE"
//        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:2.2.2.RELEASE"
    }
}

plugins {
    id 'org.sonarqube' version '2.8'
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version'1.0.9.RELEASE'
    id 'java'
    id 'jacoco'
}

group 'org.fit.linevich_shchegoleva'
version '1.0'

//apply plugin: 'groovy'
//apply plugin: 'spring-cloud-contract'

processResources {
    include '**/*'
}

sourceCompatibility = '11'
targetCompatibility = '11'

ext{
    setProperty('projectName', "Calorie_Meter")
    setProperty('swaggerVersion',"2.9.2")
    setProperty('lombokVersion',"1.18.12")
    setProperty('mapStructVersion',"1.3.1.Final")
}

sonarqube {
    properties {
        property("sonar.projectKey", "${projectName}")
        property("sonar.host.url", "http://84.237.50.237:9000")
        property("sonar.login", "8b019792b038400cfb2a80f50f1efc621717fb9b")
        property("sonar.sources", "src/main/java/org/fit/linevich_shchegoleva/services," +
                "src/main/java/org/fit/linevich_shchegoleva/mapper")
        property("sonar.tests", "src/test/java/org/fit/linevich_shchegoleva," +
                "src/main/webapp/src/tests")
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}

compileJava.dependsOn(processResources)

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}



dependencies {
    compileOnly 'org.sonarsource.sonarqube:sonar-plugin-api:8.0'
    testCompile 'org.sonarsource.sonarqube:sonar-plugin-api:8.0'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation "org.mapstruct:mapstruct:${mapStructVersion}"
    runtime group: 'org.postgresql', name: 'postgresql', version: '42.2.12'
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"
    implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
    compileOnly group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
//    testCompile group: 'org.springframework.cloud', name: 'spring-cloud-starter-contract-verifier', version: '2.2.2.RELEASE'
//    testCompile group: 'org.springframework.cloud', name: 'spring-cloud-contract-stub-runner', version: '2.2.2.RELEASE'
//    testCompile group: 'org.springframework.cloud', name: 'spring-cloud-contract-wiremock', version: '2.2.2.RELEASE'

    testImplementation (group: 'org.springframework.boot', name: 'spring-boot-starter-test'){
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

//contracts{
//    basePackageForTests = 'org.fit.linevich_shchegoleva.controllers'
//    baseClassForTests('org.fit.linevich_shchegoleva.controllers.BaseTest')
//}

test {
    useJUnitPlatform()
}

test.finalizedBy jacocoTestReport